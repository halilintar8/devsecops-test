name: üîí DevSecOps CI

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  build-and-scan:
    runs-on: ubuntu-22.04

    permissions:
      contents: read
      security-events: write

    steps:
      # =====================================================
      # üß© 1Ô∏è‚É£ Checkout repository
      # =====================================================
      - name: Checkout repository
        uses: actions/checkout@v4

      # =====================================================
      # üê≥ 2Ô∏è‚É£ Set up Docker Buildx
      # =====================================================
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # =====================================================
      # üîê 3Ô∏è‚É£ Install and authenticate Infisical
      # =====================================================
      - name: Install Infisical CLI
        run: |
          curl -s https://get.infisical.com | bash
          infisical --version

      - name: Inject Infisical secrets
        env:
          INFISICAL_TOKEN: ${{ secrets.INFISICAL_TOKEN }}
        run: |
          echo "üîë Injecting Infisical secrets..."
          infisical run \
            --projectId ca60e1c3-5a72-44b8-8074-1c716b47f9c8 \
            --env development \
            -- printenv | grep DATABASE_URL || true

      # =====================================================
      # üèóÔ∏è 4Ô∏è‚É£ Build Docker image
      # =====================================================
      - name: Build API Docker image
        run: |
          echo "üèóÔ∏è Building Docker image..."
          docker build -t devsecops-test-api:latest ./apps/api

      # =====================================================
      # üîç 5Ô∏è‚É£ Install Trivy vulnerability scanner
      # =====================================================
      - name: Install Trivy
        run: |
          echo "‚¨áÔ∏è Installing Trivy..."
          TRIVY_VERSION=0.67.1
          curl -sfL "https://github.com/aquasecurity/trivy/releases/download/v${TRIVY_VERSION}/trivy_${TRIVY_VERSION}_Linux-64bit.tar.gz" -o trivy.tar.gz
          tar zxvf trivy.tar.gz
          sudo mv trivy /usr/local/bin/
          trivy --version

      # =====================================================
      # ‚ö° 6Ô∏è‚É£ Cache Trivy vulnerability database
      # =====================================================
      - name: Cache Trivy DB
        uses: actions/cache@v3
        with:
          path: ~/.trivycache
          key: trivy-db-${{ runner.os }}-${{ hashFiles('**/Dockerfile') }}
          restore-keys: |
            trivy-db-${{ runner.os }}-

      # =====================================================
      # üß™ 7Ô∏è‚É£ Run Trivy vulnerability scan
      # =====================================================
      - name: Run Trivy vulnerability scan
        run: |
          echo "üîç Running Trivy scan..."
          mkdir -p $HOME/.trivycache
          trivy image \
            --cache-dir $HOME/.trivycache \
            --scanners vuln \
            --format json \
            --output trivy-report.json \
            --ignore-unfixed \
            --pkg-types os,library \
            --severity UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL \
            --ignorefile security/trivy/.trivyignore \
            devsecops-test-api:latest

      # =====================================================
      # üö® 8Ô∏è‚É£ Fail if HIGH/CRITICAL vulnerabilities found
      # =====================================================
      - name: Fail on HIGH/CRITICAL vulnerabilities
        run: |
          HIGH_COUNT=$(jq '[.Results[].Vulnerabilities[]? | select(.Severity=="HIGH" or .Severity=="CRITICAL")] | length' trivy-report.json)
          echo "üîé High/Critical vulnerabilities found: $HIGH_COUNT"
          if [ "$HIGH_COUNT" -gt 0 ]; then
            echo "‚ùå Failing workflow due to HIGH/CRITICAL vulnerabilities."
            exit 1
          else
            echo "‚úÖ No HIGH/CRITICAL vulnerabilities found."
          fi

      # =====================================================
      # üì¶ 9Ô∏è‚É£ Upload Trivy scan report (always)
      # =====================================================
      - name: Upload Trivy report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: trivy-report
          path: trivy-report.json

      # =====================================================
      # üöÄ üîü Deployment placeholder
      # =====================================================
      - name: Deploy placeholder
        run: echo "üöÄ Deployment steps will be added later."
